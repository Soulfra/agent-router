{
  "name": "calos-agent-router",
  "version": "1.1.0",
  "description": "CalOS Agent Router - AI-powered routing system with lofi streaming, ELO voting, and real-time collaboration",
  "main": "router.js",
  "scripts": {
    "vos": "node vos.js",
    "start": "node router.js",
    "start:quiet": "node start-quiet.js --local",
    "start:animated": "node start-animated.js --local",
    "demo": "node -e \"console.log('\\nðŸš€ DEMO URLS (Clean URLs - no .html needed!):\\n'); console.log('App Launcher:      http://localhost:5001/apps'); console.log('SoulFra OS:        http://localhost:5001/soulfra-os'); console.log('Enterprise:        http://localhost:5001/enterprise-dashboard'); console.log('CALOS OS:          http://localhost:5001/calos-os'); console.log('Pricing:           http://localhost:5001/pricing-calculator'); console.log('\\nAPI Auto-Discovery: http://localhost:5001/api/apps'); console.log('Mobile (same WiFi): http://'+require('os').networkInterfaces()['en0']?.find(i=>i.family==='IPv4')?.address+':5001/apps\\n'); console.log('ðŸ“– Full demo script: cat DEMO.md\\n'); console.log('ðŸ¤– Auto-discovery guide: cat AUTO_DISCOVERY.md\\n')\" && open http://localhost:5001/apps 2>/dev/null || true",
    "demo:launcher": "open http://localhost:5001/apps",
    "demo:enterprise": "open http://localhost:5001/enterprise-dashboard",
    "demo:soulfra": "open http://localhost:5001/soulfra-os",
    "demo:calos": "open http://localhost:5001/calos-os",
    "demo:api": "curl http://localhost:5001/api/apps | jq",
    "dev": "nodemon router.js",
    "dev:all": "concurrently \"npm:dev\" \"npm:watch:*\"",
    "test": "mocha test/**/*.test.js --timeout 30000",
    "test:offline": "node test-offline.js",
    "test:domain": "mocha test/domain-models.test.js --timeout 30000",
    "test:docs": "node lib/executable-docs-runner.js .",
    "test:docs:update": "node lib/executable-docs-runner.js . --update-docs",
    "test:integration": "node lib/integration-test-orchestrator.js",
    "test:all": "npm test && npm run test:docs && npm run test:integration",
    "test:heal": "node lib/self-healing-test-system.js",
    "test:heal:auto": "node lib/self-healing-test-system.js --auto-apply",
    "test:lessons": "node test/lessons/test-all-lessons.js",
    "test:labs": "node test/lessons/test-all-labs.js",
    "test:github-pages": "node test/lessons/test-github-pages.js",
    "test:api": "node test/lessons/test-api-integration.js",
    "test:all-lessons": "npm run test:lessons && npm run test:labs && npm run test:github-pages && npm run test:api",
    "verify:lesson-system": "node scripts/verify-lesson-system.js",
    "deploy:all": "node scripts/deploy-everywhere.js --all",
    "deploy:github": "node scripts/deploy-everywhere.js --github",
    "deploy:gitlab": "node scripts/deploy-everywhere.js --gitlab",
    "deploy:docker": "node scripts/deploy-everywhere.js --docker",
    "cal:generate": "node scripts/deploy-everywhere.js --cal",
    "cal:chat": "node bin/cal-chat-interface.js",
    "cal:deploy": "node bin/cal-auto-deploy.js",
    "test:e2e": "node lib/e2e-test-runner.js",
    "workflow:create": "node lib/approval-workflow-system.js create",
    "workflow:list": "node lib/approval-workflow-system.js list",
    "workflow:approve": "node lib/approval-workflow-system.js approve",
    "workflow:reject": "node lib/approval-workflow-system.js reject",
    "test:chaos": "node lib/chaos-testing-system.js",
    "test:chaos:high": "node lib/chaos-testing-system.js --intensity high",
    "admin": "node scripts/admin-context.js",
    "admin-context": "node scripts/admin-context.js",
    "setup": "node scripts/setup-wizard.js",
    "init": "node scripts/cli-init.js",
    "clone": "node scripts/clone-template.js",
    "deploy": "node scripts/deploy.js",
    "sync:all": "concurrently \"npm:sync:ahrefs\" \"npm:sync:sheets\" \"npm:sync:affiliates\"",
    "sync:ahrefs": "echo 'Ahrefs sync - implement in lib/ahrefs-sync.js'",
    "sync:sheets": "echo 'Google Sheets sync - implement in lib/google-sheets-sync.js'",
    "sync:affiliates": "echo 'Affiliate sync - implement in lib/affiliate-tracker.js'",
    "build:all": "concurrently \"npm:build:sdk\" \"npm:build:docs\"",
    "build:sdk": "cd sdk/platform && npm run build || echo 'SDK built'",
    "build:docs": "echo 'Docs built'",
    "git:quick": "node scripts/git-wrapper.js quick",
    "git:backup": "node scripts/git-wrapper.js backup",
    "git:share": "node scripts/git-wrapper.js share",
    "watch:files": "chokidar '**/*.js' -c 'echo File changed: {path}'",
    "watch:db": "echo 'Watching database...'",
    "env:all": "node start-environments.js",
    "env:prod": "node start-environments.js production",
    "env:staging": "node start-environments.js staging",
    "env:dev": "node start-environments.js dev",
    "env:status": "node start-environments.js status",
    "env:stop": "node start-environments.js stop",
    "ollama:start": "node manage-ollama.js start",
    "ollama:stop": "node manage-ollama.js stop",
    "ollama:restart": "node manage-ollama.js restart",
    "ollama:status": "node manage-ollama.js status",
    "ollama:models": "node manage-ollama.js models",
    "ollama:health": "node manage-ollama.js health",
    "ollama:pull": "node manage-ollama.js pull",
    "generate": "node generate-from-api.js",
    "generate:help": "node generate-from-api.js --help",
    "clarity:init": "node lib/clarity-init.js",
    "clarity:vendor": "node bin/clarity-cli.js vendor",
    "clarity:analyze": "node bin/clarity-cli.js analyze",
    "clarity:list": "node bin/clarity-cli.js list",
    "clarity:report": "node bin/clarity-cli.js report",
    "clarity:urls": "node bin/clarity-cli.js urls",
    "clarity:risks": "node bin/clarity-cli.js risks",
    "clarity:graph": "node bin/clarity-cli.js graph",
    "clarity:stats": "node bin/clarity-cli.js stats",
    "clarity:critical": "node bin/clarity-cli.js critical",
    "clarity:verify": "node bin/clarity-cli.js verify",
    "ios:sync": "npx cap sync ios",
    "ios:open": "npx cap open ios",
    "ios:run": "npx cap run ios",
    "ios:build": "npx cap build ios",
    "gmail:setup": "node bin/gmail-setup",
    "gmail:setup:free": "node bin/gmail-setup-free",
    "gmail:poll": "node -e \"const r=require('./lib/gmail-relay-zero-cost');const relay=new r();relay.startAll().then(()=>console.log('Poller started'))\"",
    "gmail:test": "node -e \"const r=require('./lib/gmail-relay-zero-cost');const relay=new r();relay.init().then(()=>relay.sendTest(process.argv[1]||'test@example.com'))\"",
    "qr:setup": "node bin/qr-login-setup",
    "qr:test": "open https://soulfra.github.io/qr-login-gist.html",
    "ragebait": "npm start & sleep 2 && open http://localhost:5001/ragebait-generator.html",
    "restart": "bash scripts/restart-server.sh",
    "bot:create": "node bin/bot-create",
    "bot:dashboard": "open http://localhost:5001/bot-builder-dashboard.html",
    "test:ai": "bash scripts/restart-server.sh",
    "time:check": "node scripts/check-time.js",
    "time:fix": "node scripts/check-time.js --fix",
    "export:conversations": "node scripts/export-conversations.js",
    "export:conversations:stats": "node scripts/export-conversations.js --stats",
    "generate:walkthrough": "node scripts/generate-walkthrough-script.js",
    "mission:recording": "node scripts/cal-start-recording-mission.js",
    "mission:recording:status": "curl http://localhost:5001/api/recording-mission/status | jq",
    "mission:recordings:scan": "curl http://localhost:5001/api/explorer/recordings | jq",
    "journal": "node scripts/start-daily-journal.js",
    "journal:start": "node scripts/start-daily-journal.js",
    "journal:status": "curl http://localhost:5001/api/voice-journal/status | jq",
    "journal:history": "curl 'http://localhost:5001/api/voice-journal/sessions?userId=default_user&limit=10' | jq",
    "journal:analytics": "curl 'http://localhost:5001/api/voice-journal/analytics?userId=default_user' | jq",
    "journal:platforms": "curl http://localhost:5001/api/voice-journal/platforms | jq",
    "migrate": "node scripts/run-migrations.js",
    "start:all": "node start-all.js",
    "test:ai-logging": "curl -X POST http://localhost:5001/api/test-ai-logging",
    "health": "node scripts/health-check.js",
    "health:quick": "node scripts/health-check.js --quick",
    "health:verbose": "node scripts/health-check.js --verbose",
    "start:verified": "node scripts/calos-start-verified.js",
    "start:verified:quick": "node scripts/calos-start-verified.js --quick",
    "cal:daemon": "node bin/cal-daemon",
    "cal:daemon:test": "node bin/cal-daemon --once --verbose",
    "cal:daemon:start": "pm2 start ecosystem.config.js --only cal-autonomous",
    "cal:daemon:stop": "pm2 stop cal-autonomous",
    "cal:daemon:restart": "pm2 restart cal-autonomous",
    "cal:daemon:logs": "pm2 logs cal-autonomous",
    "cal:daemon:status": "pm2 status cal-autonomous",
    "cal:document": "node scripts/cal-auto-document.js",
    "cal:document:publish": "node scripts/cal-auto-document.js --publish",
    "cal:media": "node bin/cal-auto-media-company.js --once",
    "cal:media:test": "node bin/cal-auto-media-company.js --once --verbose",
    "cal:media:publish": "node bin/cal-auto-media-company.js --once --publish",
    "cal:media:start": "pm2 start bin/cal-auto-media-company.js --name cal-media -- --publish",
    "cal:media:stop": "pm2 stop cal-media",
    "cal:media:logs": "pm2 logs cal-media",
    "cal:domains": "node bin/cal-multi-domain-deploy.js",
    "cal:domains:all": "node bin/cal-multi-domain-deploy.js --domains=\"calriven.com,soulfra.com,deathtodata.com\"",
    "cal:debug:lessons": "node bin/cal-debug-lessons.js",
    "cal:learn:godaddy": "node bin/cal-learn-godaddy-dns.js",
    "cal:learn:godaddy:deep": "node bin/cal-learn-godaddy-dns-v2.js --all",
    "cal:learn:godaddy:single": "node bin/cal-learn-godaddy-dns-v2.js --url=https://www.godaddy.com/help/create-a-dns-template-23870",
    "cal:learn:godaddy:full": "node bin/cal-learn-godaddy-dns-v2.js --all --teach --publish",
    "cal:dns:build": "echo 'DNS Manager builder - implement in bin/cal-dns-manager-builder.js'",
    "cal:dns:export": "node bin/cal-learn-godaddy-dns-v2.js --teach",
    "cal:dns:deploy": "node bin/cal-learn-godaddy-dns-v2.js --teach --publish",
    "cal:platform": "node bin/cal-domain-platform-cli.js",
    "cal:platform:init": "node bin/cal-domain-platform-cli.js init",
    "cal:platform:list": "node bin/cal-domain-platform-cli.js list",
    "cal:platform:sync": "node bin/cal-domain-platform-cli.js sync-brands",
    "cal:platform:chat": "node bin/cal-domain-platform-cli.js chat",
    "postinstall": "node scripts/check-setup.js"
  },
  "packageManager": "npm@10.8.2 || pnpm@9.0.0",
  "keywords": [
    "ai",
    "router",
    "agent",
    "calos"
  ],
  "author": "Cal",
  "license": "MIT",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.65.0",
    "@capacitor/cli": "^6.2.1",
    "@capacitor/core": "^7.4.3",
    "@capacitor/device": "^7.0.2",
    "@capacitor/haptics": "^7.0.2",
    "@capacitor/ios": "^7.4.3",
    "@capacitor/network": "^7.0.2",
    "@capacitor/status-bar": "^7.0.3",
    "@octokit/rest": "^21.1.1",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "ansi-html-community": "^0.0.8",
    "axios": "^1.7.7",
    "bcrypt": "^6.0.0",
    "better-sqlite3": "^9.2.2",
    "body-parser": "^1.20.2",
    "bonjour-service": "^1.3.0",
    "canvas": "^3.2.0",
    "cheerio": "^1.0.0",
    "chokidar": "^3.5.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-iiif": "^1.7.0",
    "fluent-ffmpeg": "^2.1.3",
    "googleapis": "^164.1.0",
    "inquirer": "^12.10.0",
    "jsonwebtoken": "^9.0.2",
    "mammoth": "^1.11.0",
    "marked": "^15.0.12",
    "minio": "^7.1.3",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.9",
    "openai": "^4.20.1",
    "otpauth": "^9.4.1",
    "pdf.js-extract": "^0.2.1",
    "pg": "^8.11.3",
    "pgvector": "^0.1.8",
    "pptxgenjs": "^4.0.1",
    "prom-client": "^15.1.3",
    "puppeteer": "^21.6.1",
    "qrcode": "^1.5.4",
    "rss": "^1.2.2",
    "sharp": "^0.34.4",
    "simple-git": "^3.28.0",
    "simple-oauth2": "^5.1.0",
    "sqlite3": "^5.1.7",
    "string-similarity": "^4.0.4",
    "strip-ansi": "^6.0.1",
    "stripe": "^19.1.0",
    "tiktoken": "^1.0.22",
    "undici": "^7.16.0",
    "uuid": "^8.3.2",
    "ws": "^8.14.2",
    "xml2js": "^0.6.2"
  },
  "devDependencies": {
    "chai": "^6.2.0",
    "chalk": "^4.1.2",
    "concurrently": "^9.2.1",
    "mocha": "^10.8.2",
    "nodemon": "^3.0.1"
  }
}
