{
  "packId": "2000s-engineering",
  "name": "2000s Engineering",
  "description": "Enterprise Java Beans. XML configuration hell. SOAP envelope nightmares.",
  "emoji": "â˜•",
  "controversial": false,
  "tags": ["2000s", "java", "xml", "soap", "enterprise"],
  "rarity": "legendary",
  "prompts": [
    "The most enterprise solution to ___ is ___",
    "___ needs more XML configuration",
    "This would be better with ___",
    "Our SOAP envelope contains ___",
    "___ Factory Factory Pattern",
    "Abstracting ___ with ___",
    "The problem with ___ is you need ___",
    "Enterprise grade ___ requires ___",
    "___ is too simple, add ___",
    "WSDL for ___",
    "___ as a Service",
    "Deploying ___ to ___",
    "The answer is always ___",
    "Before microservices, we had ___",
    "___ will make you a 10x developer"
  ],
  "responses": [
    "Enterprise Java Beans",
    "SOAP envelopes",
    "XML configuration files",
    "AbstractSingletonProxyFactoryBean",
    "500-page XML config",
    "application-context.xml",
    "web.xml hell",
    "struts-config.xml",
    "Java EE spec",
    "Hibernate XML mappings",
    "Spring XML beans",
    "WAR file deployment",
    "Tomcat server restart",
    "10-minute compile time",
    "J2EE best practices",
    "Enterprise Service Bus",
    "CORBA distributed objects",
    "EJB 2.1 entity beans",
    "Stateful session beans",
    "Bean-managed transactions",
    "WebSphere Application Server",
    "Oracle WebLogic",
    "JBoss AS",
    "GlassFish server",
    "ant build.xml",
    "ivy dependencies",
    "CVS version control",
    "Subversion checkout",
    "Bugzilla tickets",
    "JIRA issue tracker",
    "waterfall methodology",
    "6-month release cycles",
    "UML diagrams",
    "Rational Rose models",
    "Enterprise Architect",
    "sequence diagrams",
    "use case documents",
    "technical specifications",
    "change request forms",
    "deployment windows",
    "release candidate builds",
    "integration testing phase",
    "QA sign-off",
    "production deployment",
    "rollback procedures",
    "incident reports",
    "root cause analysis",
    "lessons learned docs",
    "JavaDoc comments",
    "design patterns catalog"
  ]
}
